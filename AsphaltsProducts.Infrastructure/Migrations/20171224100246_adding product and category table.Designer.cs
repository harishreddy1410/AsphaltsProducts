// <auto-generated />
using AsphaltsProducts.Domain.Models.ECommerce;
using AsphaltsProducts.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AsphaltsProducts.Infrastructure.Migrations
{
    [DbContext(typeof(AsphaltsDbContext))]
    [Migration("20171224100246_adding product and category table")]
    partial class addingproductandcategorytable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

           
            modelBuilder.Entity("AsphaltsProducts.Domain.Models.ECommerce.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short?>("ProductCategoryId");

                    b.Property<string>("brand")
                        .HasMaxLength(50);

                    b.Property<string>("description");

                    b.Property<string>("discounted_price");

                    b.Property<string>("image");

                    b.Property<string>("overall_rating");

                    b.Property<string>("product_category_tree");

                    b.Property<string>("product_name");

                    b.Property<string>("product_rating")
                        .HasMaxLength(50);

                    b.Property<string>("product_specifications");

                    b.Property<string>("product_url");

                    b.Property<string>("retail_price");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AsphaltsProducts.Domain.Models.ECommerce.ProductCategory", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Category");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("AsphaltsProducts.Domain.Models.ECommerce.Product", b =>
                {
                    b.HasOne("AsphaltsProducts.Domain.Models.ECommerce.ProductCategory", "CategoryId")
                        .WithMany("ProductList")
                        .HasForeignKey("ProductCategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
